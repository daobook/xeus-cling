# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Johan Mabille, Loic Gouarin and Sylvain Corlay
# This file is distributed under the same license as the xeus-cling package.
# xinetzone <735613050@qq.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xeus-cling \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-09 18:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/build_options.rst:8
msgid "Build options"
msgstr "构建选项"

#: ../../source/build_options.rst:11
msgid "Build flags"
msgstr "构建旗标"

#: ../../source/build_options.rst:13
msgid ""
"You can specify additional build flags that will be used by ``xeus-"
"cling`` to compile the code in the notebook. To do so, you need to edit "
"the kernelspec file (usually "
"``share/jupyter/kernels/xcppSTD/kernel.json``, where ``STD`` is the "
"version of the cpp standard) and add the build flags in the ``argv`` "
"array."
msgstr ""
"你可以指定额外的编译标志，这些旗标将被 ``xeus-cling`` 用来编译笔记本中的代码。"
"为此，你需要编辑 kernelspec 文件（通常是 ``share/jupyter/kernels/xcppSTD/kernel.json``，"
"其中 ``STD`` 是 cpp 标准的版本）并在 ``argv`` 数组中添加构建标志。"

#: ../../source/build_options.rst:18
msgid ""
"For instance, if you want to pass the ``-pthread -lpthread`` flags to "
"``xeus-cling`` and compile C++14 code, the C++14 kernelpec file becomes:"
msgstr ""
"例如，如果你想向 ``xeus-cling`` 传递 ``-pthread -lpthread`` 标志，并编译 C++14 代码，C++14 的 kernelpec 文件就变成："

#: ../../source/build_options.rst:37
msgid "Using third-party libraries"
msgstr "使用第三方库"

#: ../../source/build_options.rst:39
msgid ""
"When building a binary, you usually specify the include directories and "
"the library path of third-party libraries in the build tool. The library "
"will be loaded upon binary execution."
msgstr ""
"在构建二进制文件时，你通常会在构建工具中指定包括目录和第三方库的库路径。该库将在二进制执行时被加载。"

#: ../../source/build_options.rst:42
msgid ""
"``xeus-cling`` is slightly different, it allows you to specify both "
"include directories and library path, however you need to load the "
"library explicitly. This is done with special pragma commands that you "
"can use in a code cell in a Jupyter Notebook:"
msgstr ""
"``xeus-cling`` 略有不同，它允许你同时指定 include 目录和库路径，但是你需要明确加载库。"
"这是用特殊的 pragma 命令完成的，你可以在 Jupyter 笔记本的代码单元中使用："

#: ../../source/build_options.rst:46
msgid "``#pragma cling add_include_path(\"inc_directory\")``"
msgstr ""

#: ../../source/build_options.rst:47
msgid "``#pragma cling add_library_path(\"lib_directory\")``"
msgstr ""

#: ../../source/build_options.rst:48
msgid "``#pragma cling load(\"libname\")``"
msgstr ""

